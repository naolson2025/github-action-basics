name: Test And Deploy
# event to listen to
# examples: push, pull_request, create, fork etc
# manual triggers, rest api triggers, cron/schedule triggers
# on: push
on: [push, workflow_dispatch] # can have multiple event triggers
jobs:
  # testing is the first job, each job gets its own runner
  # independent of other jobs
  # jobs run in parallel by default
  test:
    # nodejs is preinstalled on ubuntu-latest
    # more info on what is preinstalled can be found here: https://docs.github.com/en/actions/reference/software-installed-on-github-hosted-runners
    runs-on: ubuntu-latest
    steps:
      # need to get our repo code copied onto the CI server
      - name: Get code
        # uses is a special keyword to indicate we want to use an action
        # actions can be found in the github marketplace
        # checkout is a special action that copies our repo code to the CI server
        uses: actions/checkout@v3
        # install nodejs is not necessary because it is preinstalled on ubuntu-latest
        # but the preinstalled version is 16, so if I want to use a different version I need to install it
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with: 
          node-version: 18
      - name: Install dependencies
        # run npm ci to install dependencies that have matching versions in package-lock.json
        # safer than npm install
        run: npm ci
      - name: Run tests
        # run unit tests
        run: npm test
  # deploying is the second job
  deploy:
    # only run deploy job if test job passes, this will prevent the default parallel execution
    # can put multiple jobs in the needs array
    # needs: [test, otherJob]
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with: 
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
        # add fake deployment step
      - name: Deploy
        run: echo "Deploying to production server"